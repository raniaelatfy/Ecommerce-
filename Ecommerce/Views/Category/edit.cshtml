@model Ecommerce.Model.CategoryVM
@{

    ViewBag.tittle = "Edit";

}


@using (Html.BeginForm("edit", "Category", FormMethod.Post, new { onsubmit = "return submitForm(this)" }))
{

    @*Modal content*@
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">@ViewBag.tittle</h4>
        </div>
        <div class="modal-body">
            @Html.HiddenFor(Model => Model.ID)
            <div class="form-group">
                @Html.LabelFor(Model => Model.Name, new { @class = "control-label" })
                @Html.EditorFor(Model => Model.Name, new { HtmlAttribute = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.Name, "")
            </div>
            <div class="form-group">
                @Html.LabelFor(Model => Model.Description, new { @class = "control-label" })
                @Html.EditorFor(Model => Model.Description, new { HtmlAttribute = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.Name, "")
            </div>
            <div>
                <input type="submit" value="Add" class="btn btn-primary" />
                <input type="reset" value="clear" class="btn btn-warning" />


            </div>

        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
  
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>